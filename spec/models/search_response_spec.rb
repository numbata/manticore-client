=begin
#Manticore Search Client

#Ð¡lient for Manticore Search. 

The version of the OpenAPI document: 5.0.0
Contact: info@manticoresearch.com
Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Manticore::Client::SearchResponse
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Manticore::Client::SearchResponse do
  let(:instance) { Manticore::Client::SearchResponse.new }

  describe 'test an instance of SearchResponse' do
    it 'should create an instance of SearchResponse' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(Manticore::Client::SearchResponse)
    end
  end

  describe 'test attribute "took"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "timed_out"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "aggregations"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "hits"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "profile"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "scroll"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "warning"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
